From 98c6fb9de2cf8645a595072250504b934df80850 Mon Sep 17 00:00:00 2001
From: KAMASUKI <KAMASUKI@users.noreply.github.com>
Date: Tue, 5 Aug 2025 18:43:00 +0200
Subject: [PATCH] Man kann durch alles in der Safezone durchlaufen

---
 clientsource/Client/GameLib/ActorInstance.h   |  4 ++++
 .../ActorInstanceCollisionDetection.cpp       | 20 +++++++++++++++++++
 .../Client/UserInterface/Locale_inc.h         |  1 +
 3 files changed, 25 insertions(+)

diff --git a/clientsource/Client/GameLib/ActorInstance.h b/clientsource/Client/GameLib/ActorInstance.h
index 78ebc7f6d..721d17bb4 100644
--- a/clientsource/Client/GameLib/ActorInstance.h
+++ b/clientsource/Client/GameLib/ActorInstance.h
@@ -343,6 +343,10 @@ class CActorInstance : public IActorInstance, public IFlyTargetableObject
 		BOOL TestActorCollision(CActorInstance & rVictim );
 		BOOL TestPhysicsBlendingCollision(CActorInstance & rVictim);
 
+#ifdef ENABLE_SAFEZONE_STOP_COLLISION
+		BOOL IsInSafe(CActorInstance & ptr);
+#endif
+
 		BOOL AttackingProcess(CActorInstance & rVictim);
 
 		void PreAttack();
diff --git a/clientsource/Client/GameLib/ActorInstanceCollisionDetection.cpp b/clientsource/Client/GameLib/ActorInstanceCollisionDetection.cpp
index 211a56025..879b4c087 100644
--- a/clientsource/Client/GameLib/ActorInstanceCollisionDetection.cpp
+++ b/clientsource/Client/GameLib/ActorInstanceCollisionDetection.cpp
@@ -2,6 +2,9 @@
 #include "../eterLib/GrpMath.h"
 
 #include "ActorInstance.h"
+#ifdef ENABLE_SAFEZONE_STOP_COLLISION
+#include "../UserInterface/PythonBackground.h"
+#endif
 
 void CActorInstance::__InitializeCollisionData()
 {
@@ -552,6 +555,18 @@ BOOL CActorInstance::TestPhysicsBlendingCollision(CActorInstance & rVictim)
 #define ENABLE_SHOPS_WITHOUT_COLLISIONS
 #define ENABLE_MOUNTS_WITHOUT_COLLISIONS
 #endif
+
+#ifdef ENABLE_SAFEZONE_STOP_COLLISION
+BOOL CActorInstance::IsInSafe(CActorInstance& ptr)
+{
+	const TPixelPosition& c_rkPPosCur = ptr.NEW_GetCurPixelPositionRef();
+	if (CPythonBackground::Instance().isAttrOn(c_rkPPosCur.x, c_rkPPosCur.y, (1 << 2)))
+		return true;
+
+	return false;
+}
+#endif
+
 BOOL CActorInstance::TestActorCollision(CActorInstance & rVictim)
 {
 	if (rVictim.IsDead())
@@ -577,6 +592,11 @@ BOOL CActorInstance::TestActorCollision(CActorInstance & rVictim)
 		return FALSE;
 #endif
 
+#ifdef ENABLE_SAFEZONE_STOP_COLLISION
+	if (IsInSafe(rVictim))
+		return FALSE;
+#endif
+
 	// Check Distance
 	D3DXVECTOR3 v3Distance = D3DXVECTOR3(rVictim.m_x - m_x, rVictim.m_y - m_y, rVictim.m_z - m_z);
 	float fDistance = D3DXVec3LengthSq(&v3Distance);
diff --git a/clientsource/Client/UserInterface/Locale_inc.h b/clientsource/Client/UserInterface/Locale_inc.h
index a9909d146..6f27f4595 100644
--- a/clientsource/Client/UserInterface/Locale_inc.h
+++ b/clientsource/Client/UserInterface/Locale_inc.h
@@ -130,6 +130,7 @@
 #define ENABLE_BETTER_RENDERING_OPTIMIZATION
 #define ENABLE_BETTER_RENDERING_WHILE_CLIENT_IS_MINIMIZED
 #define ENABLE_IGNORE_MONSTER_COLLISION
+#define ENABLE_SAFEZONE_STOP_COLLISION
 #define ENABLE_DEWS_PLUS
 #define ENABLE_AFFECT_ITEMS_PLUS
 #define ENABLE_NEW_TYPE_OF_POTION